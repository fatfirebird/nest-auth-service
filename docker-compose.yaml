version: '3.8'

services:
  dev:
    container_name: nestjs_dev
    image: nestjs_dev:1.0.0
    build:
      context: .
      dockerfile: dockerfile
      target: dev
    volumes:
      - .:/app
      - /app/node_modules
    command: pnpm start:dev
    ports:
      - ${PORT}:${PORT}
    environment:
      PORT: ${PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - default

  postgres:
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - postgresVolume:/var/lib/postgresql/data
      - ./logs:/logs
    networks:
      - default
    restart: always

  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    image: dpage/pgadmin4
    ports:
      - 5050:80
    volumes:
      - pgadminVolume:/var/lib/pgadmin
    networks:
      - default
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redisVolume:/data
    networks:
      - default
    restart: always

volumes:
  postgresVolume:
  pgadminVolume:
  redisVolume:

networks:
  default:
    driver: bridge
